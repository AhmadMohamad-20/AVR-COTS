/*
 * DIO_program.c
 *
 *  Created on: 8 Dec 2023
 *      Author: user
 */

#include "STD_Types.h"
#include "bitmath.h"

#include "DIO_cfg.h"
#include "DIO_Private.h"
#include "DIO_Reg.h"
#include "DIO_Interface.h"

uint8 DIO_setPinDirection(uint8 copy_DIO_port, uint8 copy_DIO_pin, uint8 copy_DIO_direction)
{
	uint8 local_errorState = 0;
	if (copy_DIO_pin <= PIN7)
	{
		if (copy_DIO_direction == OUTPUT)
		{
			switch (copy_DIO_port)
			{
				case DIO_PORTA:
					SET_BIT(DDRA,copy_DIO_pin);
					break;
				case DIO_PORTB:
					SET_BIT(DDRB,copy_DIO_pin);
					break;
				case DIO_PORTC:
					SET_BIT(DDRC,copy_DIO_pin);
					break;
				case DIO_PORTD:
					SET_BIT(DDRD,copy_DIO_pin);
					break;
				default:
					local_errorState = 1;
			}
		}
		else if (copy_DIO_direction == INPUT)
		{
			switch (copy_DIO_port)
			{
				case DIO_PORTA:
					CLEAR_BIT(DDRA,copy_DIO_pin);
					break;
				case DIO_PORTB:
					CLEAR_BIT(DDRB,copy_DIO_pin);
					break;
				case DIO_PORTC:
					CLEAR_BIT(DDRC,copy_DIO_pin);
					break;
				case DIO_PORTD:
					CLEAR_BIT(DDRD,copy_DIO_pin);
					break;
				default:
					local_errorState = 1;
			}
		}
		else
		{
			local_errorState = 1;
		}
	}
	else
	{
		local_errorState = 1;
	}

	return local_errorState;
}

uint8 DIO_setPinValue(uint8 copy_DIO_port, uint8 copy_DIO_pin, uint8 copy_DIO_value)
{
	uint8 local_errorSignal = 0;
	if (copy_DIO_pin <= PIN7)
	{
		if (copy_DIO_value == )
	}
	else
	{
		local_errorSignal = 1;
	}
	return local_errorSignal;
}
